// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

package graph;

public final class Graph {
    private Graph() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface TripleOrBuilder extends
            // @@protoc_insertion_point(interface_extends:graph.Triple)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated string source = 1;</code>
         *
         * @return A list containing the source.
         */
        java.util.List<java.lang.String>
        getSourceList();

        /**
         * <code>repeated string source = 1;</code>
         *
         * @return The count of source.
         */
        int getSourceCount();

        /**
         * <code>repeated string source = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The source at the given index.
         */
        java.lang.String getSource(int index);

        /**
         * <code>repeated string source = 1;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the source at the given index.
         */
        com.google.protobuf.ByteString
        getSourceBytes(int index);

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @return A list containing the relation.
         */
        java.util.List<java.lang.String>
        getRelationList();

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @return The count of relation.
         */
        int getRelationCount();

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The relation at the given index.
         */
        java.lang.String getRelation(int index);

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the relation at the given index.
         */
        com.google.protobuf.ByteString
        getRelationBytes(int index);

        /**
         * <code>repeated string target = 3;</code>
         *
         * @return A list containing the target.
         */
        java.util.List<java.lang.String>
        getTargetList();

        /**
         * <code>repeated string target = 3;</code>
         *
         * @return The count of target.
         */
        int getTargetCount();

        /**
         * <code>repeated string target = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The target at the given index.
         */
        java.lang.String getTarget(int index);

        /**
         * <code>repeated string target = 3;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the target at the given index.
         */
        com.google.protobuf.ByteString
        getTargetBytes(int index);
    }

    /**
     * <pre>
     * 定义三元组消息
     * </pre>
     * <p>
     * Protobuf type {@code graph.Triple}
     */
    public static final class Triple extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:graph.Triple)
            TripleOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use Triple.newBuilder() to construct.
        private Triple(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private Triple() {
            source_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            relation_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            target_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new Triple();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private Triple(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            java.lang.String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                source_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            source_.add(s);
                            break;
                        }
                        case 18: {
                            java.lang.String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                                relation_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            relation_.add(s);
                            break;
                        }
                        case 26: {
                            java.lang.String s = input.readStringRequireUtf8();
                            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                                target_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            target_.add(s);
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    source_ = source_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000002) != 0)) {
                    relation_ = relation_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000004) != 0)) {
                    target_ = target_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return graph.Graph.internal_static_graph_Triple_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return graph.Graph.internal_static_graph_Triple_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            graph.Graph.Triple.class, graph.Graph.Triple.Builder.class);
        }

        public static final int SOURCE_FIELD_NUMBER = 1;
        private com.google.protobuf.LazyStringList source_;

        /**
         * <code>repeated string source = 1;</code>
         *
         * @return A list containing the source.
         */
        public com.google.protobuf.ProtocolStringList
        getSourceList() {
            return source_;
        }

        /**
         * <code>repeated string source = 1;</code>
         *
         * @return The count of source.
         */
        public int getSourceCount() {
            return source_.size();
        }

        /**
         * <code>repeated string source = 1;</code>
         *
         * @param index The index of the element to return.
         * @return The source at the given index.
         */
        public java.lang.String getSource(int index) {
            return source_.get(index);
        }

        /**
         * <code>repeated string source = 1;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the source at the given index.
         */
        public com.google.protobuf.ByteString
        getSourceBytes(int index) {
            return source_.getByteString(index);
        }

        public static final int RELATION_FIELD_NUMBER = 2;
        private com.google.protobuf.LazyStringList relation_;

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @return A list containing the relation.
         */
        public com.google.protobuf.ProtocolStringList
        getRelationList() {
            return relation_;
        }

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @return The count of relation.
         */
        public int getRelationCount() {
            return relation_.size();
        }

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @param index The index of the element to return.
         * @return The relation at the given index.
         */
        public java.lang.String getRelation(int index) {
            return relation_.get(index);
        }

        /**
         * <code>repeated string relation = 2;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the relation at the given index.
         */
        public com.google.protobuf.ByteString
        getRelationBytes(int index) {
            return relation_.getByteString(index);
        }

        public static final int TARGET_FIELD_NUMBER = 3;
        private com.google.protobuf.LazyStringList target_;

        /**
         * <code>repeated string target = 3;</code>
         *
         * @return A list containing the target.
         */
        public com.google.protobuf.ProtocolStringList
        getTargetList() {
            return target_;
        }

        /**
         * <code>repeated string target = 3;</code>
         *
         * @return The count of target.
         */
        public int getTargetCount() {
            return target_.size();
        }

        /**
         * <code>repeated string target = 3;</code>
         *
         * @param index The index of the element to return.
         * @return The target at the given index.
         */
        public java.lang.String getTarget(int index) {
            return target_.get(index);
        }

        /**
         * <code>repeated string target = 3;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the target at the given index.
         */
        public com.google.protobuf.ByteString
        getTargetBytes(int index) {
            return target_.getByteString(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < source_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 1, source_.getRaw(i));
            }
            for (int i = 0; i < relation_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 2, relation_.getRaw(i));
            }
            for (int i = 0; i < target_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, target_.getRaw(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                for (int i = 0; i < source_.size(); i++) {
                    dataSize += computeStringSizeNoTag(source_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getSourceList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < relation_.size(); i++) {
                    dataSize += computeStringSizeNoTag(relation_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getRelationList().size();
            }
            {
                int dataSize = 0;
                for (int i = 0; i < target_.size(); i++) {
                    dataSize += computeStringSizeNoTag(target_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getTargetList().size();
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof graph.Graph.Triple)) {
                return super.equals(obj);
            }
            graph.Graph.Triple other = (graph.Graph.Triple) obj;

            if (!getSourceList()
                    .equals(other.getSourceList())) return false;
            if (!getRelationList()
                    .equals(other.getRelationList())) return false;
            if (!getTargetList()
                    .equals(other.getTargetList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getSourceCount() > 0) {
                hash = (37 * hash) + SOURCE_FIELD_NUMBER;
                hash = (53 * hash) + getSourceList().hashCode();
            }
            if (getRelationCount() > 0) {
                hash = (37 * hash) + RELATION_FIELD_NUMBER;
                hash = (53 * hash) + getRelationList().hashCode();
            }
            if (getTargetCount() > 0) {
                hash = (37 * hash) + TARGET_FIELD_NUMBER;
                hash = (53 * hash) + getTargetList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static graph.Graph.Triple parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.Triple parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.Triple parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.Triple parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.Triple parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.Triple parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.Triple parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static graph.Graph.Triple parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static graph.Graph.Triple parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static graph.Graph.Triple parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static graph.Graph.Triple parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static graph.Graph.Triple parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(graph.Graph.Triple prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * 定义三元组消息
         * </pre>
         * <p>
         * Protobuf type {@code graph.Triple}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:graph.Triple)
                graph.Graph.TripleOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return graph.Graph.internal_static_graph_Triple_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return graph.Graph.internal_static_graph_Triple_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                graph.Graph.Triple.class, graph.Graph.Triple.Builder.class);
            }

            // Construct using graph.Graph.Triple.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                source_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                relation_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                target_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return graph.Graph.internal_static_graph_Triple_descriptor;
            }

            @java.lang.Override
            public graph.Graph.Triple getDefaultInstanceForType() {
                return graph.Graph.Triple.getDefaultInstance();
            }

            @java.lang.Override
            public graph.Graph.Triple build() {
                graph.Graph.Triple result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public graph.Graph.Triple buildPartial() {
                graph.Graph.Triple result = new graph.Graph.Triple(this);
                int from_bitField0_ = bitField0_;
                if (((bitField0_ & 0x00000001) != 0)) {
                    source_ = source_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.source_ = source_;
                if (((bitField0_ & 0x00000002) != 0)) {
                    relation_ = relation_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000002);
                }
                result.relation_ = relation_;
                if (((bitField0_ & 0x00000004) != 0)) {
                    target_ = target_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000004);
                }
                result.target_ = target_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof graph.Graph.Triple) {
                    return mergeFrom((graph.Graph.Triple) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(graph.Graph.Triple other) {
                if (other == graph.Graph.Triple.getDefaultInstance()) return this;
                if (!other.source_.isEmpty()) {
                    if (source_.isEmpty()) {
                        source_ = other.source_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureSourceIsMutable();
                        source_.addAll(other.source_);
                    }
                    onChanged();
                }
                if (!other.relation_.isEmpty()) {
                    if (relation_.isEmpty()) {
                        relation_ = other.relation_;
                        bitField0_ = (bitField0_ & ~0x00000002);
                    } else {
                        ensureRelationIsMutable();
                        relation_.addAll(other.relation_);
                    }
                    onChanged();
                }
                if (!other.target_.isEmpty()) {
                    if (target_.isEmpty()) {
                        target_ = other.target_;
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        ensureTargetIsMutable();
                        target_.addAll(other.target_);
                    }
                    onChanged();
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                graph.Graph.Triple parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (graph.Graph.Triple) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private com.google.protobuf.LazyStringList source_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureSourceIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    source_ = new com.google.protobuf.LazyStringArrayList(source_);
                    bitField0_ |= 0x00000001;
                }
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @return A list containing the source.
             */
            public com.google.protobuf.ProtocolStringList
            getSourceList() {
                return source_.getUnmodifiableView();
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @return The count of source.
             */
            public int getSourceCount() {
                return source_.size();
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param index The index of the element to return.
             * @return The source at the given index.
             */
            public java.lang.String getSource(int index) {
                return source_.get(index);
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the source at the given index.
             */
            public com.google.protobuf.ByteString
            getSourceBytes(int index) {
                return source_.getByteString(index);
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param index The index to set the value at.
             * @param value The source to set.
             * @return This builder for chaining.
             */
            public Builder setSource(
                    int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSourceIsMutable();
                source_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param value The source to add.
             * @return This builder for chaining.
             */
            public Builder addSource(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureSourceIsMutable();
                source_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param values The source to add.
             * @return This builder for chaining.
             */
            public Builder addAllSource(
                    java.lang.Iterable<java.lang.String> values) {
                ensureSourceIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, source_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearSource() {
                source_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string source = 1;</code>
             *
             * @param value The bytes of the source to add.
             * @return This builder for chaining.
             */
            public Builder addSourceBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureSourceIsMutable();
                source_.add(value);
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList relation_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureRelationIsMutable() {
                if (!((bitField0_ & 0x00000002) != 0)) {
                    relation_ = new com.google.protobuf.LazyStringArrayList(relation_);
                    bitField0_ |= 0x00000002;
                }
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @return A list containing the relation.
             */
            public com.google.protobuf.ProtocolStringList
            getRelationList() {
                return relation_.getUnmodifiableView();
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @return The count of relation.
             */
            public int getRelationCount() {
                return relation_.size();
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param index The index of the element to return.
             * @return The relation at the given index.
             */
            public java.lang.String getRelation(int index) {
                return relation_.get(index);
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the relation at the given index.
             */
            public com.google.protobuf.ByteString
            getRelationBytes(int index) {
                return relation_.getByteString(index);
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param index The index to set the value at.
             * @param value The relation to set.
             * @return This builder for chaining.
             */
            public Builder setRelation(
                    int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureRelationIsMutable();
                relation_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param value The relation to add.
             * @return This builder for chaining.
             */
            public Builder addRelation(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureRelationIsMutable();
                relation_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param values The relation to add.
             * @return This builder for chaining.
             */
            public Builder addAllRelation(
                    java.lang.Iterable<java.lang.String> values) {
                ensureRelationIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, relation_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearRelation() {
                relation_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000002);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string relation = 2;</code>
             *
             * @param value The bytes of the relation to add.
             * @return This builder for chaining.
             */
            public Builder addRelationBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureRelationIsMutable();
                relation_.add(value);
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList target_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureTargetIsMutable() {
                if (!((bitField0_ & 0x00000004) != 0)) {
                    target_ = new com.google.protobuf.LazyStringArrayList(target_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @return A list containing the target.
             */
            public com.google.protobuf.ProtocolStringList
            getTargetList() {
                return target_.getUnmodifiableView();
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @return The count of target.
             */
            public int getTargetCount() {
                return target_.size();
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param index The index of the element to return.
             * @return The target at the given index.
             */
            public java.lang.String getTarget(int index) {
                return target_.get(index);
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the target at the given index.
             */
            public com.google.protobuf.ByteString
            getTargetBytes(int index) {
                return target_.getByteString(index);
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param index The index to set the value at.
             * @param value The target to set.
             * @return This builder for chaining.
             */
            public Builder setTarget(
                    int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureTargetIsMutable();
                target_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param value The target to add.
             * @return This builder for chaining.
             */
            public Builder addTarget(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureTargetIsMutable();
                target_.add(value);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param values The target to add.
             * @return This builder for chaining.
             */
            public Builder addAllTarget(
                    java.lang.Iterable<java.lang.String> values) {
                ensureTargetIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, target_);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearTarget() {
                target_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000004);
                onChanged();
                return this;
            }

            /**
             * <code>repeated string target = 3;</code>
             *
             * @param value The bytes of the target to add.
             * @return This builder for chaining.
             */
            public Builder addTargetBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                checkByteStringIsUtf8(value);
                ensureTargetIsMutable();
                target_.add(value);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:graph.Triple)
        }

        // @@protoc_insertion_point(class_scope:graph.Triple)
        private static final graph.Graph.Triple DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new graph.Graph.Triple();
        }

        public static graph.Graph.Triple getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Triple>
                PARSER = new com.google.protobuf.AbstractParser<Triple>() {
            @java.lang.Override
            public Triple parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new Triple(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<Triple> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Triple> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public graph.Graph.Triple getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface TripleListOrBuilder extends
            // @@protoc_insertion_point(interface_extends:graph.TripleList)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        java.util.List<graph.Graph.Triple>
        getTriplesList();

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        graph.Graph.Triple getTriples(int index);

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        int getTriplesCount();

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        java.util.List<? extends graph.Graph.TripleOrBuilder>
        getTriplesOrBuilderList();

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        graph.Graph.TripleOrBuilder getTriplesOrBuilder(
                int index);
    }

    /**
     * <pre>
     * 定义三元组列表消息
     * </pre>
     * <p>
     * Protobuf type {@code graph.TripleList}
     */
    public static final class TripleList extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:graph.TripleList)
            TripleListOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use TripleList.newBuilder() to construct.
        private TripleList(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private TripleList() {
            triples_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new TripleList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private TripleList(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                                triples_ = new java.util.ArrayList<graph.Graph.Triple>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            triples_.add(
                                    input.readMessage(graph.Graph.Triple.parser(), extensionRegistry));
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000001) != 0)) {
                    triples_ = java.util.Collections.unmodifiableList(triples_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return graph.Graph.internal_static_graph_TripleList_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return graph.Graph.internal_static_graph_TripleList_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            graph.Graph.TripleList.class, graph.Graph.TripleList.Builder.class);
        }

        public static final int TRIPLES_FIELD_NUMBER = 1;
        private java.util.List<graph.Graph.Triple> triples_;

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        @java.lang.Override
        public java.util.List<graph.Graph.Triple> getTriplesList() {
            return triples_;
        }

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends graph.Graph.TripleOrBuilder>
        getTriplesOrBuilderList() {
            return triples_;
        }

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        @java.lang.Override
        public int getTriplesCount() {
            return triples_.size();
        }

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        @java.lang.Override
        public graph.Graph.Triple getTriples(int index) {
            return triples_.get(index);
        }

        /**
         * <code>repeated .graph.Triple triples = 1;</code>
         */
        @java.lang.Override
        public graph.Graph.TripleOrBuilder getTriplesOrBuilder(
                int index) {
            return triples_.get(index);
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < triples_.size(); i++) {
                output.writeMessage(1, triples_.get(i));
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < triples_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, triples_.get(i));
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof graph.Graph.TripleList)) {
                return super.equals(obj);
            }
            graph.Graph.TripleList other = (graph.Graph.TripleList) obj;

            if (!getTriplesList()
                    .equals(other.getTriplesList())) return false;
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (getTriplesCount() > 0) {
                hash = (37 * hash) + TRIPLES_FIELD_NUMBER;
                hash = (53 * hash) + getTriplesList().hashCode();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static graph.Graph.TripleList parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.TripleList parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.TripleList parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.TripleList parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.TripleList parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static graph.Graph.TripleList parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static graph.Graph.TripleList parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static graph.Graph.TripleList parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static graph.Graph.TripleList parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static graph.Graph.TripleList parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static graph.Graph.TripleList parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static graph.Graph.TripleList parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(graph.Graph.TripleList prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * 定义三元组列表消息
         * </pre>
         * <p>
         * Protobuf type {@code graph.TripleList}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:graph.TripleList)
                graph.Graph.TripleListOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return graph.Graph.internal_static_graph_TripleList_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return graph.Graph.internal_static_graph_TripleList_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                graph.Graph.TripleList.class, graph.Graph.TripleList.Builder.class);
            }

            // Construct using graph.Graph.TripleList.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getTriplesFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                if (triplesBuilder_ == null) {
                    triples_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                    triplesBuilder_.clear();
                }
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return graph.Graph.internal_static_graph_TripleList_descriptor;
            }

            @java.lang.Override
            public graph.Graph.TripleList getDefaultInstanceForType() {
                return graph.Graph.TripleList.getDefaultInstance();
            }

            @java.lang.Override
            public graph.Graph.TripleList build() {
                graph.Graph.TripleList result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public graph.Graph.TripleList buildPartial() {
                graph.Graph.TripleList result = new graph.Graph.TripleList(this);
                int from_bitField0_ = bitField0_;
                if (triplesBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) != 0)) {
                        triples_ = java.util.Collections.unmodifiableList(triples_);
                        bitField0_ = (bitField0_ & ~0x00000001);
                    }
                    result.triples_ = triples_;
                } else {
                    result.triples_ = triplesBuilder_.build();
                }
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof graph.Graph.TripleList) {
                    return mergeFrom((graph.Graph.TripleList) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(graph.Graph.TripleList other) {
                if (other == graph.Graph.TripleList.getDefaultInstance()) return this;
                if (triplesBuilder_ == null) {
                    if (!other.triples_.isEmpty()) {
                        if (triples_.isEmpty()) {
                            triples_ = other.triples_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                        } else {
                            ensureTriplesIsMutable();
                            triples_.addAll(other.triples_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.triples_.isEmpty()) {
                        if (triplesBuilder_.isEmpty()) {
                            triplesBuilder_.dispose();
                            triplesBuilder_ = null;
                            triples_ = other.triples_;
                            bitField0_ = (bitField0_ & ~0x00000001);
                            triplesBuilder_ =
                                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                                            getTriplesFieldBuilder() : null;
                        } else {
                            triplesBuilder_.addAllMessages(other.triples_);
                        }
                    }
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                graph.Graph.TripleList parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (graph.Graph.TripleList) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.util.List<graph.Graph.Triple> triples_ =
                    java.util.Collections.emptyList();

            private void ensureTriplesIsMutable() {
                if (!((bitField0_ & 0x00000001) != 0)) {
                    triples_ = new java.util.ArrayList<graph.Graph.Triple>(triples_);
                    bitField0_ |= 0x00000001;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    graph.Graph.Triple, graph.Graph.Triple.Builder, graph.Graph.TripleOrBuilder> triplesBuilder_;

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public java.util.List<graph.Graph.Triple> getTriplesList() {
                if (triplesBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(triples_);
                } else {
                    return triplesBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public int getTriplesCount() {
                if (triplesBuilder_ == null) {
                    return triples_.size();
                } else {
                    return triplesBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public graph.Graph.Triple getTriples(int index) {
                if (triplesBuilder_ == null) {
                    return triples_.get(index);
                } else {
                    return triplesBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder setTriples(
                    int index, graph.Graph.Triple value) {
                if (triplesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTriplesIsMutable();
                    triples_.set(index, value);
                    onChanged();
                } else {
                    triplesBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder setTriples(
                    int index, graph.Graph.Triple.Builder builderForValue) {
                if (triplesBuilder_ == null) {
                    ensureTriplesIsMutable();
                    triples_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    triplesBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder addTriples(graph.Graph.Triple value) {
                if (triplesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTriplesIsMutable();
                    triples_.add(value);
                    onChanged();
                } else {
                    triplesBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder addTriples(
                    int index, graph.Graph.Triple value) {
                if (triplesBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureTriplesIsMutable();
                    triples_.add(index, value);
                    onChanged();
                } else {
                    triplesBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder addTriples(
                    graph.Graph.Triple.Builder builderForValue) {
                if (triplesBuilder_ == null) {
                    ensureTriplesIsMutable();
                    triples_.add(builderForValue.build());
                    onChanged();
                } else {
                    triplesBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder addTriples(
                    int index, graph.Graph.Triple.Builder builderForValue) {
                if (triplesBuilder_ == null) {
                    ensureTriplesIsMutable();
                    triples_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    triplesBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder addAllTriples(
                    java.lang.Iterable<? extends graph.Graph.Triple> values) {
                if (triplesBuilder_ == null) {
                    ensureTriplesIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, triples_);
                    onChanged();
                } else {
                    triplesBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder clearTriples() {
                if (triplesBuilder_ == null) {
                    triples_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000001);
                    onChanged();
                } else {
                    triplesBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public Builder removeTriples(int index) {
                if (triplesBuilder_ == null) {
                    ensureTriplesIsMutable();
                    triples_.remove(index);
                    onChanged();
                } else {
                    triplesBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public graph.Graph.Triple.Builder getTriplesBuilder(
                    int index) {
                return getTriplesFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public graph.Graph.TripleOrBuilder getTriplesOrBuilder(
                    int index) {
                if (triplesBuilder_ == null) {
                    return triples_.get(index);
                } else {
                    return triplesBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public java.util.List<? extends graph.Graph.TripleOrBuilder>
            getTriplesOrBuilderList() {
                if (triplesBuilder_ != null) {
                    return triplesBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(triples_);
                }
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public graph.Graph.Triple.Builder addTriplesBuilder() {
                return getTriplesFieldBuilder().addBuilder(
                        graph.Graph.Triple.getDefaultInstance());
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public graph.Graph.Triple.Builder addTriplesBuilder(
                    int index) {
                return getTriplesFieldBuilder().addBuilder(
                        index, graph.Graph.Triple.getDefaultInstance());
            }

            /**
             * <code>repeated .graph.Triple triples = 1;</code>
             */
            public java.util.List<graph.Graph.Triple.Builder>
            getTriplesBuilderList() {
                return getTriplesFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilderV3<
                    graph.Graph.Triple, graph.Graph.Triple.Builder, graph.Graph.TripleOrBuilder>
            getTriplesFieldBuilder() {
                if (triplesBuilder_ == null) {
                    triplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                            graph.Graph.Triple, graph.Graph.Triple.Builder, graph.Graph.TripleOrBuilder>(
                            triples_,
                            ((bitField0_ & 0x00000001) != 0),
                            getParentForChildren(),
                            isClean());
                    triples_ = null;
                }
                return triplesBuilder_;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:graph.TripleList)
        }

        // @@protoc_insertion_point(class_scope:graph.TripleList)
        private static final graph.Graph.TripleList DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new graph.Graph.TripleList();
        }

        public static graph.Graph.TripleList getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<TripleList>
                PARSER = new com.google.protobuf.AbstractParser<TripleList>() {
            @java.lang.Override
            public TripleList parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new TripleList(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<TripleList> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TripleList> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public graph.Graph.TripleList getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_graph_Triple_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_graph_Triple_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_graph_TripleList_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_graph_TripleList_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\013graph.proto\022\005graph\032\033google/protobuf/em" +
                        "pty.proto\":\n\006Triple\022\016\n\006source\030\001 \003(\t\022\020\n\010r" +
                        "elation\030\002 \003(\t\022\016\n\006target\030\003 \003(\t\",\n\nTripleL" +
                        "ist\022\036\n\007triples\030\001 \003(\0132\r.graph.Triple2G\n\014G" +
                        "raphService\0227\n\nGetTriples\022\026.google.proto" +
                        "buf.Empty\032\021.graph.TripleListb\006proto3"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                com.google.protobuf.EmptyProto.getDescriptor(),
                        });
        internal_static_graph_Triple_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_graph_Triple_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_graph_Triple_descriptor,
                new java.lang.String[]{"Source", "Relation", "Target",});
        internal_static_graph_TripleList_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_graph_TripleList_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_graph_TripleList_descriptor,
                new java.lang.String[]{"Triples",});
        com.google.protobuf.EmptyProto.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
